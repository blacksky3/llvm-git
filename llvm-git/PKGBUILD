# _     _            _        _          _____
#| |__ | | __ _  ___| | _____| | ___   _|___ /
#| '_ \| |/ _` |/ __| |/ / __| |/ / | | | |_ \
#| |_) | | (_| | (__|   <\__ \   <| |_| |___) |
#|_.__/|_|\__,_|\___|_|\_\___/_|\_\\__, |____/
#                                  |___/

#Maintainer: blacksky3 <blacksky3@tuta.io> <https://github.com/blacksky3>
#Credits: Evangelos Foutras <evangelos@foutrelis.com>
#Credits: Jan "heftig" Steffens <jan.steffens@gmail.com>

pkgbase=llvm-git
pkgname=(llvm-git llvm-libs-git llvm-ocaml-git)
url='https://llvm.org/'
pkgver=15.0.0.r419656.g81f5c6270cdf
pkgrel=1
arch=(x86_64)
license=('custom:Apache 2.0 with LLVM Exception')
makedepends=(cmake ninja libffi libedit ncurses libxml2 ocaml ocaml-ctypes ocaml-findlib
             python-setuptools python-psutil python-sphinx python-recommonmark git)
options=(staticlibs !lto) # Getting thousands of test failures with LTO
source=(git+https://github.com/llvm/llvm-project.git#commit=81f5c6270cdfcdf80e6296df216b696a7a37c8b5
        llvm-config.h)
md5sums=(SKIP
         SKIP)

pkgver() {
  cd ${srcdir}/llvm-project/llvm

  # This will almost match the output of `llvm-config --version` when the
  # LLVM_APPEND_VC_REV cmake flag is turned on. The only difference is
  # dash being replaced with underscore because of Pacman requirements.
  local _pkgver=$(awk -F 'MAJOR |MINOR |PATCH |)' \
  'BEGIN { ORS="." ; i=0 } \
  /set\(LLVM_VERSION_/ { print $2 ; i++ ; if (i==2) ORS="" } \
  END { print "\n" }' \
  CMakeLists.txt).r$(git rev-list --count HEAD).g$(git rev-parse --short HEAD)
  echo "$_pkgver"
}

build(){
  cd ${srcdir}/llvm-project/llvm

  rm -rf build

  cmake -H. -G Ninja -Bbuild \
  -DCMAKE_BUILD_TYPE=Release \
  -DCMAKE_INSTALL_PREFIX=/usr \
  -DCMAKE_SKIP_RPATH=ON \
  -DLLVM_HOST_TRIPLE=$CHOST \
  -DLLVM_BUILD_LLVM_DYLIB=ON \
  -DLLVM_LINK_LLVM_DYLIB=ON \
  -DLLVM_INSTALL_UTILS=ON \
  -DLLVM_ENABLE_RTTI=ON \
  -DLLVM_ENABLE_FFI=ON \
  -DLLVM_BUILD_TESTS=ON \
  -DLLVM_BUILD_DOCS=ON \
  -DLLVM_ENABLE_SPHINX=ON \
  -DLLVM_ENABLE_DOXYGEN=OFF \
  -DSPHINX_WARNINGS_AS_ERRORS=OFF \
  -DLLVM_BINUTILS_INCDIR=/usr/include

  ninja -C build all
  ninja -C build ocaml_doc
}

check(){
  cd ${srcdir}/llvm-project/llvm/build
  LD_LIBRARY_PATH=$PWD/lib ninja check
}

package_llvm-git(){
  pkgdesc='Collection of modular and reusable compiler and toolchain technologies (git version)'
  depends=(llvm-libs perl)
  conflicts=(llvm)
  provides=(llvm)

  cd llvm-project/llvm/build

  DESTDIR="$pkgdir" ninja install

  # Include lit for running lit-based tests in other projects
  pushd ../utils/lit
  python3 setup.py install --root="$pkgdir" -O1
  popd

  # Remove documentation sources
  rm -r "$pkgdir"/usr/share/doc/LLVM/llvm/html/{_sources,.buildinfo}

  # The runtime libraries go into llvm-libs
  mv -f "$pkgdir"/usr/lib/lib{LLVM,LTO,Remarks}*.so* "$srcdir"
  mv -f "$pkgdir"/usr/lib/LLVMgold.so "$srcdir"

  # OCaml bindings go to a separate package
  rm -rf "$srcdir"/ocaml.{lib,doc}
  mv "$pkgdir/usr/lib/ocaml" "$srcdir/ocaml.lib"
  mv "$pkgdir/usr/share/doc/LLVM/llvm/ocaml-html" "$srcdir/ocaml.doc"

  if [[ $CARCH == x86_64 ]]; then
    # Needed for multilib (https://bugs.archlinux.org/task/29951)
    # Header stub is taken from Fedora
    mv "$pkgdir/usr/include/llvm/Config/llvm-config"{,-64}.h
    cp "$srcdir/llvm-config.h" "$pkgdir/usr/include/llvm/Config/llvm-config.h"

    # workarround for lldb that need llvm/Config/config.h
    cp "$srcdir/llvm-config.h" "$pkgdir/usr/include/llvm/Config/config.h"
  fi

  # LLVM docs to default Archlinux location
  mv "$pkgdir/usr/share/doc/LLVM/llvm" "$pkgdir/usr/share/doc/"
  rm -rf ${pkgdir}/usr/share/doc/LLVM

  install -Dm644 "$srcdir/llvm-project/llvm/LICENSE.TXT" "$pkgdir/usr/share/licenses/$pkgname/LICENSE"
  install -Dm644 "$srcdir/llvm-project/llvm/CREDITS.TXT" "$pkgdir/usr/share/licenses/$pkgname/CREDITS"
  install -Dm644 "$srcdir/llvm-project/llvm/CODE_OWNERS.TXT" "$pkgdir/usr/share/licenses/$pkgname/CODE_OWNERS"
}

package_llvm-libs-git(){
  pkgdesc='LLVM runtime libraries'
  depends=(gcc-libs zlib libffi libedit ncurses libxml2)
  conflicts=(llvm-libs)
  provides=(llvm-libs)

  install -d "$pkgdir/usr/lib"
  cp -P \
    "$srcdir"/lib{LLVM,LTO,Remarks}*.so* \
    "$srcdir"/LLVMgold.so \
    "$pkgdir/usr/lib/"

  # Symlink LLVMgold.so from /usr/lib/bfd-plugins
  # https://bugs.archlinux.org/task/28479
  install -d "$pkgdir/usr/lib/bfd-plugins"
  ln -s ../LLVMgold.so "$pkgdir/usr/lib/bfd-plugins/LLVMgold.so"

  install -Dm644 "$srcdir/llvm-project/llvm/LICENSE.TXT" "$pkgdir/usr/share/licenses/$pkgname/LICENSE"
  install -Dm644 "$srcdir/llvm-project/llvm/CREDITS.TXT" "$pkgdir/usr/share/licenses/$pkgname/CREDITS"
  install -Dm644 "$srcdir/llvm-project/llvm/CODE_OWNERS.TXT" "$pkgdir/usr/share/licenses/$pkgname/CODE_OWNERS"
}

package_llvm-ocaml-git(){
  pkgdesc='OCaml bindings for LLVM (git version)'
  depends=(llvm ocaml ocaml-ctypes)
  conflicts=(llvm-ocaml)
  provides=(llvm-ocaml)

  install -d "$pkgdir"/{usr/lib,usr/share/doc/llvm-ocaml}
  cp -a "$srcdir/ocaml.lib" "$pkgdir/usr/lib/ocaml"
  cp -a "$srcdir/ocaml.doc" "$pkgdir/usr/share/doc/llvm-ocaml/html"

  install -Dm644 "$srcdir/llvm-project/llvm/LICENSE.TXT" "$pkgdir/usr/share/licenses/$pkgname/LICENSE"
  install -Dm644 "$srcdir/llvm-project/llvm/CREDITS.TXT" "$pkgdir/usr/share/licenses/$pkgname/CREDITS"
  install -Dm644 "$srcdir/llvm-project/llvm/CODE_OWNERS.TXT" "$pkgdir/usr/share/licenses/$pkgname/CODE_OWNERS"
}
